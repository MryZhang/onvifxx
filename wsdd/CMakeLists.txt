project(${CMAKE_PROJECT_NAME}_wsdd)
cmake_minimum_required(VERSION 2.6)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")

file(GLOB GENERATED_HEADER "${PROJECT_BINARY_DIR}/*.h")
if(NOT GENERATED_HEADER)
execute_process(
	COMMAND ${GSOAP_SOAPCPP2} -inxL -I${GSOAP_IMPORT_DIR} ${GSOAP_IMPORT_DIR}/wsdd10.h
	WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
)
endif(NOT GENERATED_HEADER)

include_directories(${CMAKE_SOURCE_DIR}/include)
include_directories(${PROJECT_BINARY_DIR})

file(GLOB WSDD_HEADERS "*.h")
file(GLOB WSDD_GEN_HEADERS "${PROJECT_BINARY_DIR}/*.h")
aux_source_directory(. WSDD_SOURCES)
aux_source_directory(${PROJECT_BINARY_DIR} WSDD_GEN_SOURCES)

add_library(${PROJECT_NAME}
	STATIC
	${WSDD_SOURCES} ${WSDD_HEADERS}
	${WSDD_GEN_SOURCES} ${WSDD_GEN_HEADERS}
)
